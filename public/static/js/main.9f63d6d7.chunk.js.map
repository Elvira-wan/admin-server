{"version":3,"sources":["assets/images/logo.png","redux/action/action-types.js","utils/storageUtils.js","redux/reducer/index.js","redux/store.js","api/ajax.js","api/index.js","redux/action/index.js","pages/Login/index.jsx","utils/dateUtils.js","components/LinkButton/index.jsx","components/Header/index.jsx","config/menuConfig.jsx","components/LeftNav/index.jsx","pages/Home/Line.jsx","pages/Home/Bar.jsx","pages/Home/index.jsx","pages/Category/index.jsx","utils/constants.js","pages/Product/Home.jsx","pages/Product/PictrueWall.jsx","pages/Product/RichTextEditor.jsx","pages/Product/AddUpdate.jsx","pages/Product/Detail.jsx","pages/Product/index.jsx","pages/Role/index.jsx","pages/User/UserForm.jsx","pages/User/index.jsx","pages/Charts/bar.jsx","pages/Charts/line.jsx","pages/Charts/pie.jsx","pages/Not-found/index.jsx","pages/Admin/index.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","storageUtils","user","store","set","get","remove","initHeaderTltle","initUser","combineReducers","headTitle","state","arguments","length","undefined","action","type","data","Object","objectSpread2","errorMsg","createStore","allReducer","composeWithDevTools","applyMiddleware","thunk","ajax","url","Promise","resolve","axios","params","post","then","response","catch","err","message","error","reqLogin","username","password","BASE","reqWeather","reqCategory","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqCategoryFromId","reqProuductList","pageNum","pageSize","reqSearchProduct","_ref2","searchType","searchName","defineProperty","reqAddOrUpdateProduct","product","_id","reqUpdateProductState","productId","status","reqDeleteProductImg","name","reqUser","reqAddUpdateUser","reqDelectUser","userId","reqRole","reqAddRole","roleName","reqUpdateRole","role","receiveUser","logout","Login","formRef","React","createRef","handleSubmit","_callee","e","values","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","current","validateFields","sent","props","login","success","t0","console","log","stop","this","react_default","createElement","react_router","to","className","src","logo","alt","es_form","ref","Item","rules","required","min","max","pattern","input","prefix","UserOutlined","style","color","placeholder","LockOutlined","es_button","onClick","htmlType","Component","connect","asyncToGenerator","mark","dispatch","result","msg","_x","apply","formateDate","time","date","Date","concat","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","LinkButton","assign","confirm","modal","Header","city","weather","temperature","sysTime","now","getWeather","_data$lives$","lives","setState","getSysTime","interValId","setInterval","title","icon","ExclamationCircleOutlined","content","onOk","history","replace","clearInterval","_this$state","LinkButton_LinkButton","withRouter","menuConfig","key","HomeOutlined","isPublic","disabled","AppstoreOutlined","children","BarsOutlined","ToolOutlined","SafetyOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","SubMenu","menu","LeftNav","getMenuNodes","menuList","path","location","pathname","setHeadTitle","map","item","hasAuth","find","cItem","indexOf","openKey","react_router_dom","menus","child","menuNodes","selectKey","theme","selectedKeys","defaultOpenKeys","mode","LineChart","float","width","height","BizCharts","scale","formatter","v","London","Tokyo","padding","autoFit","month","interactions","position","shape","label","shared","showCrosshairs","background","fill","stroke","Bar","year","sales","RangePicker","date_picker","Home","isVisited","handleChange","card","extra","QuestionCircleOutlined","headStyle","statistic","value","suffix","fontWeight","valueStyle","fontSize","ArrowDownOutlined","marginLeft","ArrowUpOutlined","Line_LineChart","defaultValue","moment","format","bodyStyle","ReloadOutlined","Bar_Bar","timeline","Option","es_select","Category","dataSource","subCategory","parentName","loading","showLinkButton","confirmLoading","addRef","updateRef","getCategory","category","showsubCates","showCategory","showAdd","handleAdd","_callee2","_yield$_this$addRef$c","_context2","showUpdate","handleUpdate","_callee3","_yield$_this$updateRe","_context3","resetFields","handleCancel","_this2","columns","dataIndex","render","_this3","ArrowRightOutlined","ghost","PlusOutlined","table","bordered","rowKey","pagination","showQuickJumper","visible","onCancel","initialValue","hasFeedback","destroyOnClose","PAGE_SIZE","BASE_IMG_PATH","Search","ProductHome","searchRef","pageLoading","total","productList","getProduct","_yield$_this$searchRe","products","_products$data","_pageNum","list","withdrawProduct","pageChange","componentDidMount","Fragment","marginBottom","display","push","layout","Home_Option","allowClear","onSearch","onChange","PicturesWall","classCallCheck","_super","call","getImgs","fileList","file","previewVisible","handlePreview","previewImage","thumbUrl","_result$data","imgs","img","index","uid","uploadButton","marginTop","upload","accept","listType","onPreview","beforeUpload","footer","RichTextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","detail","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","EditorState","createWithContent","createEmpty","react_draft_wysiwyg","editorStyle","border","ProductAddUpdate","options","picRef","detailRef","handleBack","goBack","validatePrice","rule","callback","initOptions","_assertThisInitialize","isUpdate","pCategoryId","c","isLeaf","assertThisInitialized","targetOption","loadData","setFieldsValue","categoryIds","_yield$reqCategory","abrupt","_callee4","selectedOptions","subData","_context4","toConsumableArray","_callee5","_assertThisInitialize2","_yield$formRef$curren","desc","price","productObj","_context5","ArrowLeftOutlined","labelCol","span","wrapperCol","labelAlign","TextArea","validator","cascader","PictrueWall_PicturesWall","RichTextEditor_RichTextEditor","offset","block","ProductDetail","cName","cSonName","getCategoryName","results","result1","result2","_cName","all","_ref3","es_list","marginRight","dangerouslySetInnerHTML","__html","Product","exact","component","Role","roles","currentRole","expandedKeys","getRoles","_yield$reqRole","create_time","auth_time","showSetAthu","_yield$_this$formRef$","_yield$reqAddRole","auth_name","_this$state$currentRo","_yield$reqUpdateRole","getTime","role_id","handleCheck","setExpandedKeys","rowSelection","selected","selectedRows","tree","checkable","onCheck","defaultCheckedKeys","treeData","UserForm","getInitForm","_this$props$user","phone","email","_this$props","roleList","Password","UserForm_Option","User","users","getUser","_response$","role_name","showDelete","handleDelete","maskClosable","handleAddUpdate","_yield$reqAddUpdateUs","_yield$reqDelectUser","UserForm_UserForm","stores","update","sale","reduce","pre","getOption","text","tooltip","legend","xAxis","yAxis","series","barWidth","esm","option","Line","Pie","subtext","x","trigger","orient","left","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","getOption2","top","lineStyle","toolbox","show","feature","dataView","readOnly","restore","saveAsImage","roseType","borderRadius","labelLine","NotFound","row","col","Content","Footer","Sider","Admin","collapsed","onCollapse","minHeight","collapsible","margin","opacity","components_LeftNav","src_components_Header","from","textAlign","App","ReactDOM","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9f63d6d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7ddab8e5.png\";","// 保存了action-type的常量\r\n\r\n// 设置头部标题 \r\nexport const SET_HEAD_TITLE = 'set_head_title' \r\n// 接收新的用户 \r\nexport const RECEIVE_USER = 'receive_user' \r\n// 显示错误提示信息 \r\nexport const SHOW_ERROR_MSG = 'show_error_msg' \r\n// 重置用户\r\nexport const RESET_USER = 'reset_user' ","// 进行local数据存储管理的工具模块,将数据存储在localStore中达到\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\n\r\nexport default {\r\n\r\n    // 保存user\r\n    saveUser (user) {\r\n        // 该方法两个参数都必须是字符串形式\r\n        // localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n        store.set(USER_KEY, user);\r\n    },\r\n    // 读取user\r\n    getUser () {\r\n        // 如果USER_KEY存在则返回，没有值则返回空对象，以防报错\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || {});\r\n        return store.get(USER_KEY) || {};\r\n    },\r\n    // 删除user\r\n    removeUser() {\r\n        // localStorage.removeItem(USER_KEY);\r\n        store.remove(USER_KEY);\r\n    }\r\n}\r\n","// 引入合并reducer方法\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport {\r\n    SET_HEAD_TITLE,\r\n    RECEIVE_USER,\r\n    SHOW_ERROR_MSG,\r\n    RESET_USER\r\n} from '../action/action-types';\r\n\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\n// 管理header的Title\r\nconst initHeaderTltle = '首页';\r\nfunction headTitle(state=initHeaderTltle, action) {\r\n    switch (action.type) {\r\n        case SET_HEAD_TITLE:\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// 管理user\r\nconst initUser = storageUtils.getUser();\r\nfunction user(state=initUser, action) {\r\n    switch (action.type) {\r\n        case RECEIVE_USER:\r\n            return action.user;\r\n        case SHOW_ERROR_MSG:\r\n            return {...state, errorMsg: action.errorMsg};\r\n        case RESET_USER:\r\n            return {};\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n// 合并暴露reducer\r\nexport default combineReducers({headTitle, user})","// 引入构建store的方法\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n// 引入reducer\r\nimport allReducer from './reducer';\r\n\r\n// 暴露store对象\r\nexport default createStore(allReducer, composeWithDevTools(applyMiddleware(thunk)));","// 定义能发送axios请求的函数模块\r\n// 封装axios库, 函数的返回值是Promise对象\r\n// 优化：\r\n// 1.统一处理请求异常 \r\n// 2.异步返回的不是 response，而是response.data\r\n\r\nimport axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\n// 请求url，请求参数，请求类型\r\nexport default (url, data = {}, type='GET') => {\r\n    // 取代了axios原本返回的Promise对象，提前处理掉错误可能\r\n    return  new Promise((resolve) => {\r\n        // 1.执行ajax异步请求\r\n        let Promise;\r\n        if(type === 'GET') {\r\n            // axios.get()第二个参数为配置对象\r\n            Promise = axios.get(url,{\r\n                params: data\r\n            })\r\n        } else {\r\n            // axios.post()第二个参数为请求对象\r\n            Promise = axios.post(url, data)\r\n        }\r\n\r\n        Promise.then(response => {\r\n            // 2.如果成功，调用resolve()\r\n            resolve(response.data);\r\n        }).catch(err => {\r\n            // 3.重点：如果失败，不调用reject(reason)，而是显示异常信息\r\n            // 因为在第三步不调用reject也就不会返回失败态的promise\r\n            // 更不用在外部每次都书写 catch\r\n            message.error(err.message);\r\n        })\r\n    })\r\n}\r\n","// 包含应用中所有接口请求函数的模块\r\n// 每个接口函数的返回值都是Promise\r\n// 要求：能根据接口文档定义接口请求函数\r\n\r\nimport ajax from \"./ajax\";\r\n\r\nconst BASE = '/api'\r\n// 登录接口请求函数\r\nexport const reqLogin =  (username, password) => ajax(BASE + '/login', {username, password}, 'POST');\r\n\r\n// 天气更新\r\nexport const reqWeather = () => ajax('https://restapi.amap.com/v3/weather/weatherInfo?city=360111&key=73e3121f8a251a23b0120317c455c46b');\r\n\r\n// 获取品类\r\nexport const reqCategory = (parentId) => ajax(BASE + '/manage/category/list', {parentId});\r\n// 添加分类，两种传参方式 ———— 直接传多个参数\r\nexport const reqAddCategory = (parentId, categoryName) => ajax(BASE + '/manage/category/add', {parentId, categoryName}, 'POST');\r\n// 更新品类名称，两种传参方式 ———— 从对象中解构\r\nexport const reqUpdateCategory = ({categoryId,categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST');\r\n\r\n// 根据分类ID获取分类\r\nexport const reqCategoryFromId = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId});\r\n// 获取商品分页列表\r\nexport const reqProuductList = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize});\r\n// 通过Name获取商品\r\nexport const reqSearchProduct = ({pageNum, pageSize, searchType, searchName}) => ajax(BASE + '/manage/product/search', {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: searchName\r\n});\r\n// 添加/更新商品\r\nexport const reqAddOrUpdateProduct = product => ajax(BASE + '/manage/product/' + (product._id ? 'update' : 'add') , product, 'POST');\r\n// 对商品进行上下架处理\r\nexport const reqUpdateProductState = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST');\r\n// 删除商品图片\r\nexport const reqDeleteProductImg = name => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n\r\n// 请求用户列表\r\nexport const reqUser = () => ajax(BASE + '/manage/user/list')\r\n// 添加/更新用户\r\nexport const reqAddUpdateUser = (user) => ajax(BASE + '/manage/user/' + (user._id ? '/update' : 'add'), user, 'POST');\r\n// 删除用户\r\nexport const reqDelectUser = userId => ajax(BASE + '/manage/user/delete', {userId}, 'POST');\r\n// 请求角色列表\r\nexport const reqRole = () => ajax(BASE + '/manage/role/list');\r\n// 添加角色\r\nexport const reqAddRole = roleName => ajax(BASE + 'manage/role/add', {roleName}, 'POST');\r\n// 更新角色\r\nexport const reqUpdateRole = role => ajax(BASE + 'manage/role/update', role, 'POST');","// 用来创建action的工厂函数\r\nimport {\r\n    SET_HEAD_TITLE,\r\n    RECEIVE_USER,\r\n    SHOW_ERROR_MSG,\r\n    RESET_USER\r\n} from './action-types';\r\n\r\nimport { reqLogin } from '../../api';\r\nimport storageUtils from '../../utils/storageUtils';\r\n\r\n// 设置头部标题的同步action：\r\nexport const setHeadTitle = headTitle => ({type: SET_HEAD_TITLE, data: headTitle});\r\n\r\n// 接收用户的同步action：\r\n// 这里的user包装后并不需要写在对象的 data属性中，因为使用对象简写属性，在reducer中可以直接使用action.user取值\r\nexport const receiveUser = user => ({type: RECEIVE_USER, user})\r\n\r\n// 显示错误信息的同步action：\r\nexport const showErrorMsg = errorMsg => ({type: SHOW_ERROR_MSG, errorMsg});\r\n\r\n// 退出登陆的同步action：\r\nexport const logout = () => {\r\n    storageUtils.removeUser();\r\n    return {type: RESET_USER};\r\n}\r\n\r\n// 异步登录的action\r\n// 返回一个函数，该函数由store自主调用并传入一个参数dispatch\r\nexport const login = (username, password) => {\r\n    return async dispatch => {\r\n        const result = await reqLogin(username, password);\r\n        console.log(result)\r\n        if (result.status === 0) {\r\n            const user = result.data;\r\n            storageUtils.saveUser(user);\r\n            dispatch(receiveUser(user));\r\n        } else {\r\n            const msg = result.msg;\r\n            dispatch(showErrorMsg(msg));\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n// 引入路由组件\r\nimport { Redirect } from 'react-router-dom';\r\n// 引入connect\r\nimport { connect } from 'react-redux';\r\n// 引入antd标签\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n// 改用引入异步action\r\nimport { login } from '../../redux/action';\r\n// 引入图片\r\nimport logo from '../../assets/images/logo.png';\r\n// 引入样式\r\nimport './index.less';\r\n\r\nclass Login extends Component {\r\n    // 创建ref以获取输入框的值\r\n    formRef = React.createRef();\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const values = await this.formRef.current.validateFields()\r\n            // 此时的value可以获取form.Item中的值，并作为一个对象储存\r\n            // form.Item的name，即为value的属性名\r\n            const { username, password } = values;\r\n            await this.props.login(username, password);\r\n            // 因为login为异步请求，因此要加 await等待其结果\r\n            if (!this.props.user.errorMsg) {\r\n                message.success('登录成功！');\r\n            } else {\r\n                message.error('账号或密码输入错误！');\r\n            }\r\n        } catch (err) {\r\n            // 统一验证的错误：errorInfo为一个对象\r\n            console.log(err)\r\n            message.error('账号密码不符合要求！');\r\n        }\r\n    }\r\n    // componentWillUnmount = () => {\r\n    //     reqLogin = null;\r\n    // }\r\n\r\n    render() {\r\n        // 保存登陆状态, 若用户已经登录则自动跳转到admin\r\n        const user = this.props.user;\r\n        if (user && user._id) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div className='login'>\r\n                <header className='login-header'>\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>React全栈：后台管理系统</h1>\r\n                </header>\r\n                <section className='login-content'>\r\n                    <h3>用户登录</h3>\r\n                    <Form className=\"login-form\" ref={this.formRef}>\r\n                        <Form.Item name='username' rules={[\r\n                            { required: true, message: '必须输入用户名' },\r\n                            { min: 4, message: '用户名至少4位' },\r\n                            { max: 12, message: '用户名最多12位' },\r\n                            { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' }\r\n                        ]}>\r\n\r\n                            <Input\r\n                                prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"用户名\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name='password' rules={[\r\n                            { required: true, message: '必须输入密码' },\r\n                            { min: 4, message: '密码至少4位' },\r\n                            { max: 12, message: '密码最多12位' },\r\n                            { pattern: /^[a-zA-Z0-9_]+$/, message: '密码必须是英文、数字或下划线组成' }\r\n                        ]}>\r\n                            <Input\r\n                                prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button onClick={this.handleSubmit} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// 1.前端表单验证\r\n// 2.收集表单数据\r\n// 废弃：const WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n    state => ({ user: state.user }),\r\n    {\r\n        login\r\n    }\r\n)(Login)","// 包含n个日期时间处理的工具函数模块\r\n\r\n// 格式化日期\r\nexport const formateDate = (time) => {\r\n    if (!time) return '';\r\n    // 传入的time是一个时间戳\r\n    // new Date() 之后的time是 Tue Aug 03 2021 20:40:25 GMT+0800 (GMT+08:00) 格式，因此要通过下列方法获取\r\n    let date = new Date(time);\r\n    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}` \r\n}\r\n","import React from 'react'\r\nimport './index.less'\r\n\r\n// 通用的看起来像超链接的button组件\r\nexport default function LinkButton(props) {\r\n    // console.log(props);\r\n    return <button {...props} className='link-button'></button> \r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n// 引入弹出框\r\nimport { Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n// 引入天气请求函数\r\nimport { reqWeather } from '../../api';\r\nimport { formateDate } from '../../utils/dateUtils';\r\n// 引入菜单配置\r\n// import menuList from '../../config/menuConfig';\r\n// 引入内存\r\n// import storageUtils from '../../utils/storageUtils';\r\n// import memoryUtils from '../../utils/memoryUtils';\r\n\r\nimport LinkButton from '../LinkButton';\r\n// 引入异步登录action\r\nimport { logout } from '../../redux/action';\r\nimport './index.less';\r\n\r\nconst { confirm } = Modal;\r\nclass Header extends Component {\r\n    state = {\r\n        city: '',\r\n        weather: '',\r\n        temperature: '',\r\n        sysTime: formateDate(Date.now())\r\n    }\r\n    // 查询天气函数\r\n    getWeather = async () => {\r\n        const data = await reqWeather();\r\n        // 如果查询天气成功\r\n        if (data.status === \"1\") {\r\n            const { city, weather, temperature } = data.lives[0];\r\n            this.setState({ city, weather, temperature });\r\n        }\r\n    }\r\n    // 同步获取时间函数\r\n    getSysTime = () => {\r\n        this.interValId = setInterval(() => {\r\n            this.setState({ sysTime: formateDate(Date.now()) })\r\n        }, 1000)\r\n    }\r\n\r\n    // 根据请求的path获取得到对应的标题\r\n    // getTitle = () => {\r\n    //     let path = this.props.location.pathname;\r\n    //     let title;\r\n    //     menuList.forEach(item => {\r\n    //         if (item.key === path) {\r\n    //             title = item.title;\r\n    //         } else if (item.children) {\r\n    //             item.children.forEach(citem => {\r\n    //                 // 在点击商品管理二级路由时，确保header正常显示\r\n    //                 if (path.indexOf('/product') === 0) {\r\n    //                     path = '/product';\r\n    //                 };\r\n    //                 if (citem.key === path) {\r\n    //                     title = citem.title;\r\n    //                 }\r\n    //             })\r\n    //         }\r\n    //     })\r\n    //     return title;\r\n    // }\r\n\r\n    // 退出登录\r\n    logout = () => {\r\n        confirm({\r\n            title: '确定退出吗?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '一旦操作不可撤销',\r\n            // 注意：这里要将onOK改为箭头函数，否则可能出现this.props报错无法读取this值的情况\r\n            onOk: () => {\r\n                // // 将用户数据从localStorage中移除\r\n                // storageUtils.removeUser();\r\n                // // 将用户数据从memoryUtils中移除\r\n                // memoryUtils.user = {};\r\n                \r\n                // 直接调用action中的方法\r\n                this.props.logout();\r\n                // 跳转到login\r\n                this.props.history.replace('/login');\r\n            },\r\n        });\r\n    }\r\n    // 挂载组件时调用获取时间和天气函数\r\n    componentDidMount() {\r\n        this.getWeather();\r\n        this.getSysTime();\r\n    }\r\n    // 在组件卸载之前清除浏览器\r\n    componentWillUnmount() {\r\n        clearInterval(this.interValId);\r\n    }\r\n    render() {\r\n        const { city, weather, temperature, sysTime } = this.state;\r\n        \r\n        // // 从内存中获取用户名\r\n        // const user = memoryUtils.user.username;\r\n        // // 调用方法获取标题名\r\n        // const title = this.getTitle(path);\r\n\r\n        // 从store中获取用户及标题名\r\n        const user = this.props.user.username;\r\n        const title = this.props.headTitle;\r\n        \r\n        return (\r\n            <div className=\"header-box\">\r\n                <div className=\"header-top\">\r\n                    <span>Hello, {user}</span>\r\n                    <LinkButton onClick={this.logout}>退出</LinkButton>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"path-box\">{title}</div>\r\n                    <div className=\"weather-box\">\r\n                        <span className=\"date\">{sysTime}</span>\r\n                        <span className=\"distinct\">{city}</span>\r\n                        <span className=\"weather\">{weather} &nbsp;{temperature}℃</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        user: state.user, \r\n        headTitle: state.headTitle\r\n    }),\r\n    {\r\n        logout\r\n    }\r\n)(withRouter(Header));","// 左侧导航栏列表 menuList\r\nimport React from 'react'\r\nimport {\r\n    PieChartOutlined,\r\n    LineChartOutlined,\r\n    BarChartOutlined,\r\n    AreaChartOutlined,\r\n    SafetyOutlined,\r\n    ToolOutlined,\r\n    BarsOutlined,\r\n    AppstoreOutlined,\r\n    HomeOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons'\r\n\r\nexport default [{\r\n    title: '首页',    // 菜单标题名称 \r\n    key: '/home',    // 对应的 path \r\n    icon: (<HomeOutlined />),    // 图标名称 \r\n    isPublic: true, // 公开的\r\n    disabled: true  // 在树形控件中设置为不可选\r\n    \r\n}, {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: (<AppstoreOutlined />),\r\n    children: [\r\n        // 子菜单列表 \r\n        {\r\n            title: '品类管理',\r\n            key: '/category',\r\n            icon: (<BarsOutlined />)\r\n        }, {\r\n            title: '商品管理',\r\n            key: '/product',\r\n            icon: (<ToolOutlined />)\r\n        },\r\n    ]\r\n}, {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: (<UserOutlined />)\r\n}, {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: (<SafetyOutlined />)\r\n}, {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: (<AreaChartOutlined />),\r\n    children: [{\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: (<BarChartOutlined />)\r\n    }, {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: (<LineChartOutlined />)\r\n    }, {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: (<PieChartOutlined />)\r\n    }]\r\n} ]","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Menu } from 'antd';\r\n\r\n// 导入操作标题的action方法\r\nimport { setHeadTitle } from '../../redux/action/index.js';\r\n// 因为直接从prop中读取了服务器返回的user数据，因此无需再次读取\r\n// import memoryUtils from '../../utils/memoryUtils.js'\r\nimport menuList from '../../config/menuConfig.jsx'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n    getMenuNodes = (menuList) => {\r\n        const path = this.props.location.pathname;\r\n        if (path === '/') {\r\n            this.props.setHeadTitle('首页');\r\n        }\r\n        return menuList.map(item => {\r\n            // debugger;\r\n            if (this.hasAuth(item)) {\r\n                if (!item.children) {\r\n                    // 一旦匹配上当前item路径，将item的title保存进redux\r\n                    // 若第一次进入页面不为首页，则使用该条语句匹配\r\n                    if (item.key === path || path.indexOf(item.key) === 0) {\r\n                        this.props.setHeadTitle(item.title);\r\n                    }\r\n                    return (\r\n                        // 想让icon的值动态显示为item.icon\r\n                        <Menu.Item key={item.key} icon={item.icon}>\r\n                            {/* 点击路由时将当前路由标题设置在redux中 */}\r\n                            <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                } else {\r\n                    // 如果当前请求路由与当前菜单的某个子菜单的key相匹配，则将菜单的key保存在openkey中\r\n                    if (item.children.find(cItem => path.indexOf(cItem.key) === 0)) {\r\n                        this.openKey = item.key\r\n                    }\r\n                    return (\r\n                        <SubMenu\r\n                            key={item.key}\r\n                            title={\r\n                                <span>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    // 判断当前用户是否有看到当前item对应菜单项的权限\r\n    hasAuth = (item) => {\r\n        const {key, isPublic} = item;\r\n        const menus = this.props.user.role.menus;\r\n        const username = this.props.user.username;\r\n        // 若此项设置为公开 或 当前为admin登录 或 渲染菜单中含有当前项\r\n        if (isPublic || username === 'admin' || menus.indexOf(key) !== -1) {\r\n            return true\r\n        } else if (item.children) {\r\n            // 若存在子节点的化则遍历其子节点是否含有显示项，并强行转化为 boolean值\r\n            return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n        }\r\n\r\n        // 否则则返回false不渲染菜单项\r\n        return false;\r\n    }\r\n\r\n    // 在组件初次挂载之前调用函数渲染画面\r\n    UNSAFE_componentWillMount() {\r\n        this.menuNodes = this.getMenuNodes(menuList);\r\n    }\r\n\r\n    render() {\r\n        // 解决商品详情页path不相等导致无法选中Link的问题\r\n        let path = this.props.location.pathname;\r\n        if (path.indexOf('/product') === 0) {\r\n            // 当前页面为商品或商品子路由界面\r\n            path = '/product';\r\n        }\r\n        const selectKey = path;\r\n        const openKey = this.openKey;\r\n        return (\r\n            <Menu\r\n                theme=\"dark\"\r\n                selectedKeys={[selectKey]}\r\n                defaultOpenKeys={[openKey]}\r\n                mode=\"inline\"\r\n            >\r\n                {\r\n                    this.menuNodes\r\n                }\r\n            </Menu>\r\n\r\n        )\r\n    }\r\n}\r\n// 将UI组件和路由组件连接\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {\r\n        setHeadTitle\r\n    }\r\n)(withRouter(LeftNav));","import React, { Component } from \"react\"\r\n\r\nimport { Chart, Line, Point, Tooltip, Legend } from 'bizcharts';\r\n\r\nexport default class LineChart extends Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        city: \"Tokyo\",\r\n        temperature: 7\r\n      },\r\n      {\r\n        month: \"Jan\",\r\n        city: \"London\",\r\n        temperature: 3.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        city: \"Tokyo\",\r\n        temperature: 6.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        city: \"London\",\r\n        temperature: 4.2\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        city: \"Tokyo\",\r\n        temperature: 9.5\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        city: \"London\",\r\n        temperature: 5.7\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        city: \"Tokyo\",\r\n        temperature: 14.5\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        city: \"London\",\r\n        temperature: 8.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        city: \"Tokyo\",\r\n        temperature: 18.4\r\n      },\r\n      {\r\n        month: \"May\",\r\n        city: \"London\",\r\n        temperature: 11.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        city: \"Tokyo\",\r\n        temperature: 21.5\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        city: \"London\",\r\n        temperature: 15.2\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        city: \"Tokyo\",\r\n        temperature: 25.2\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        city: \"London\",\r\n        temperature: 17\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        city: \"Tokyo\",\r\n        temperature: 26.5\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        city: \"London\",\r\n        temperature: 16.6\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        city: \"Tokyo\",\r\n        temperature: 23.3\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        city: \"London\",\r\n        temperature: 14.2\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        city: \"Tokyo\",\r\n        temperature: 18.3\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        city: \"London\",\r\n        temperature: 10.3\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        city: \"Tokyo\",\r\n        temperature: 13.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        city: \"London\",\r\n        temperature: 6.6\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        city: \"Tokyo\",\r\n        temperature: 9.6\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        city: \"London\",\r\n        temperature: 4.8\r\n      }\r\n    ];\r\n\r\n    const scale = {\r\n      temperature: { min: 0 },\r\n      city: {\r\n        formatter: v => {\r\n          return {\r\n            London: '伦敦',\r\n            Tokyo: '东京'\r\n          }[v]\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ float: 'right', width: 750, height: 280 }}>\r\n        <Chart scale={scale} padding={[30, 20, 60, 40]} autoFit data={data} interactions={['element-active']}>\r\n          <Point position=\"month*temperature\" color=\"city\" shape='circle' />\r\n          <Line shape=\"smooth\" position=\"month*temperature\" color=\"city\" label=\"temperature\" />\r\n          <Tooltip shared showCrosshairs />\r\n          <Legend background={{\r\n            padding: [5, 100, 5, 36],\r\n            style: {\r\n              fill: '#eaeaea',\r\n              stroke: '#fff'\r\n            }\r\n          }} />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\"\r\nimport { Chart, Interval, Tooltip } from 'bizcharts';\r\n\r\nexport default class Bar extends Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"9月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    return (\r\n      <div style={{ width: '100%', height: 275}}>\r\n        <Chart autoFit data={data} interactions={['active-region']} padding={[30, 30, 30, 50]} >\r\n          <Interval position=\"year*sales\" />\r\n          <Tooltip shared />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline\r\n} from 'antd'\r\nimport {\r\n  QuestionCircleOutlined,\r\n  ArrowDownOutlined,\r\n  ArrowUpOutlined,\r\n  ReloadOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport moment from 'moment'\r\n\r\nimport LineChart from './Line'\r\nimport Bar from './Bar'\r\nimport './index.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n\r\n  render() {\r\n    const {isVisited} = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<QuestionCircleOutlined style={{color: 'rgba(0,0,0,.45)'}}/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<ArrowDownOutlined style={{color: 'red', marginLeft: 10}} /></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<ArrowUpOutlined style={{color: '#3f8600', marginLeft: 10}} /></div>}\r\n          />\r\n        </Card>\r\n\r\n        <LineChart/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2021/07/30', dateFormat), moment('2021/08/16', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<ReloadOutlined />}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<ReloadOutlined />} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Select,\r\n    Input,\r\n    message\r\n} from 'antd'\r\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons';\r\n// 引入请求分类\r\nimport { reqCategory, reqAddCategory, reqUpdateCategory } from '../../api';\r\n// 引入LinkButton\r\nimport LinkButton from '../../components/LinkButton'\r\n\r\n// select组件中获取option\r\nconst { Option } = Select;\r\nexport default class Category extends Component {\r\n    state = {\r\n        dataSource: [],         // 一级分类列表数据\r\n        subCategory: [],        // 二级分类列表\r\n        parentId: '0',          // 父分类的Id\r\n        parentName: '',          // 父分类名称\r\n        loading: true,          // 表单数据的loading\r\n        showLinkButton: 0,      // 0:都不显示， 1：增加按钮显示，2：更新按钮显示\r\n        confirmLoading: false   // 设置Madal框的loading样式\r\n    }\r\n    // 创建addRef\r\n    addRef = React.createRef()\r\n    updateRef = React.createRef()\r\n\r\n    // 获取表单数据\r\n    getCategory = async (parentId) => {\r\n        // 优先使用传入的parentId，若未指定则使用state的\r\n        parentId = parentId || this.state.parentId;\r\n        const category = await reqCategory(parentId);\r\n        if (category.status === 0) {\r\n            // 若父分类Id为0，则更新一级分类\r\n            if (parentId === '0') {\r\n                this.setState({ dataSource: category.data })\r\n            } else {\r\n                this.setState({ subCategory: category.data })\r\n            }\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    // 显示指定分类的子分类列表\r\n    showsubCates = (category) => {\r\n        // 这里必须将getCategory的调用写在setState的第二个参数回调函数中，因为setState是异步的\r\n        this.setState({\r\n            parentId: category._id,\r\n            parentName: category.name\r\n        }, () => {\r\n            this.getCategory();\r\n        })\r\n    }\r\n    // 显示一级列表\r\n    showCategory = () => {\r\n        this.setState({\r\n            parentId: '0',\r\n            parentName: '',\r\n            subCategory: [],\r\n            // showStatus: 0\r\n        })\r\n    }\r\n\r\n\r\n    // 展示添加\r\n    showAdd = () => {\r\n        this.setState({ showLinkButton: 1 });\r\n    }\r\n    // 添加成功的回调\r\n    handleAdd = async () => {\r\n        try {\r\n            // 获取表单中输入值\r\n            const { parentId, categoryName } = await this.addRef.current.validateFields()\r\n            this.setState({ confirmLoading: true })\r\n            // 请求添加\r\n            reqAddCategory(parentId, categoryName);\r\n            if (parentId === this.setState.parentId) {\r\n                this.getCategory()\r\n            } else if (parentId === '0') {\r\n                this.getCategory(parentId)\r\n            }\r\n            message.success(\"添加成功\")\r\n            this.setState({ confirmLoading: false, showLinkButton: 0 })\r\n        } catch {\r\n            message.error('填写表单不规范')\r\n        }\r\n    }\r\n\r\n    // 展示修改\r\n    showUpdate = (category) => {\r\n        // 参数为当前点击修改的分类项，将其保存在 this中\r\n        this.category = category;\r\n        this.setState({ showLinkButton: 2 })\r\n    }\r\n    // 修改成功的回调\r\n    handleUpdate = async () => {\r\n        // 获取需要修改的id\r\n        const categoryId = this.category._id\r\n        // 获取表单填写的修改后分类名\r\n        const { categoryName } = await this.updateRef.current.validateFields()\r\n        this.setState({ confirmLoading: true })\r\n        try {\r\n            await reqUpdateCategory({ categoryId, categoryName });\r\n            // 重写获取表单数据\r\n            this.getCategory();\r\n            // 重置表单\r\n            this.updateRef.current.resetFields()\r\n            this.setState({ showLinkButton: 0, confirmLoading: false })\r\n            message.success('修改成功')\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            message.error('呜呜~分类修改失败');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // 关闭添加与修改框\r\n    handleCancel = () => {\r\n        this.setState({ showLinkButton: 0 })\r\n    }\r\n\r\n    // 初次渲染钩子\r\n    UNSAFE_componentWillMount() {\r\n        // 表格每列的内容\r\n        this.columns = [\r\n            {\r\n                title: '分类名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: '30%',\r\n                render: (category) => {\r\n                    return (\r\n                        <div>\r\n                            <LinkButton onClick={() => { this.showUpdate(category) }}>修改分类</LinkButton>\r\n                            {\r\n                                this.state.parentId === '0' ?\r\n                                    <LinkButton onClick={() => { this.showsubCates(category) }}>查看子分类</LinkButton> : null\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            }]\r\n    }\r\n\r\n    // 挂载完成时发送请求获取表单数据\r\n    componentDidMount() {\r\n        this.getCategory();\r\n    }\r\n\r\n    render() {\r\n        // 解构state中数据\r\n        const { dataSource, subCategory, parentId, parentName, loading, confirmLoading, showLinkButton } = this.state;\r\n        // Card显示内容\r\n        // Card 左侧标题\r\n        const title = parentId === '0' ? '一级分类列表' : (\r\n            <span>\r\n                <LinkButton style={{ fontSize: '16px' }} onClick={this.showCategory}>一级分类列表</LinkButton>\r\n                <ArrowRightOutlined />&nbsp;&nbsp;&nbsp;\r\n                <span style={{ fontSize: '14px' }}>{parentName}</span>\r\n            </span>\r\n        )\r\n        // card按钮\r\n        const extra = (() => {\r\n            return (\r\n                <Button onClick={this.showAdd} type='primary' ghost>\r\n                    <PlusOutlined />\r\n                    <span>添加</span>\r\n                </Button>\r\n            )\r\n        })()\r\n\r\n\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                {/* 表格结构：dataSource填写表单信息，columns填写表头信息 */}\r\n                <Table\r\n                    bordered\r\n                    loading={loading}\r\n                    rowKey='_id'\r\n                    dataSource={parentId === '0' ? dataSource : subCategory}    // 判断展示哪一个目录\r\n                    columns={this.columns}\r\n                    pagination={{ pageSize: 5, showQuickJumper: true }}\r\n                />\r\n\r\n                {/* 添加输入框 */}\r\n                {\r\n                    showLinkButton === 1 &&\r\n                    <Modal\r\n                        title=\"添加分类\"\r\n                        visible={showLinkButton === 1}\r\n                        onOk={() => { this.handleAdd() }}\r\n                        confirmLoading={confirmLoading}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <Form ref={this.addRef}>\r\n                            <Form.Item\r\n                                name=\"parentId\"\r\n                                label=\"父类目录\"\r\n                                initialValue={parentId}\r\n                                hasFeedback\r\n                                rules={[{ required: true, message: '分类目录必须填写哟!' }]}\r\n                            >\r\n                                <Select placeholder=\"选择您要添加分类的目录\">\r\n                                    <Option key=\"0\" value=\"0\">一级分类</Option>\r\n                                    {\r\n                                        dataSource.map(item => {\r\n                                            return <Option key={item._id} value={item._id}>{item.name}</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"categoryName\"\r\n                                label=\"分类名称\"\r\n                                hasFeedback\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: '分类名称必须填写哟！',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"请输入您想添加的分类名称\" />\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                }\r\n                {/* 更新分类弹窗 */}\r\n                <Modal\r\n                    title=\"更新分类\"\r\n                    visible={showLinkButton === 2}\r\n                    onOk={this.handleUpdate}\r\n                    confirmLoading={confirmLoading}\r\n                    onCancel={this.handleCancel}\r\n                    destroyOnClose      // 表示该组件每次重新加载都会重新更新\r\n                >\r\n                    <Form ref={this.updateRef}>\r\n                        <Form.Item\r\n                            name=\"categoryName\"\r\n                            label=\"分类名称\"\r\n                            hasFeedback\r\n                            initialValue={this.category === undefined ? null : this.category.name}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '分类名称必须填写哟！',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"请输入您想更改的分类名称\" />\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","export const PAGE_SIZE = 5;\r\nexport const BASE_IMG_PATH = 'http://localhost:5000/upload/' // 上传的图片的基础地址 \r\nexport const UPLOAD_IMG_NAME = 'image'          // 上传图片的参数名\r\n\r\n","import React, { Component } from 'react'\r\n// 引入antd\r\nimport {\r\n    Card,\r\n    Form,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Table,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\n// 引入请求函数\r\nimport LinkButton from '../../components/LinkButton';\r\nimport {\r\n    reqProuductList,\r\n    reqSearchProduct,\r\n    reqUpdateProductState,\r\n} from '../../api'\r\n// 引入每页数据条数\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport './index.less'\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nexport default class ProductHome extends Component {\r\n    searchRef = React.createRef();\r\n\r\n    state = {\r\n        pageLoading: true,      // 请求前页面加载效果\r\n        pageNum: 1,             // 当前页\r\n        total: 0,               // 总共数据数\r\n        productList: [],         // 产品数据\r\n    }\r\n    // 请求商品数据\r\n    getProduct = async (pageNum, pageSize) => {\r\n        try {\r\n            const {searchType, searchName} = await this.searchRef.current.validateFields()\r\n            let products\r\n            // 若搜索框中有搜索词，则调用searchProduct按关键词请求，反之则调用reqProduct\r\n            if (searchName !== undefined) {\r\n                products = await reqSearchProduct({pageNum, pageSize, searchType, searchName});\r\n            } else {\r\n                products = await reqProuductList(pageNum, pageSize);\r\n            }\r\n            if (products.status === 0) {\r\n                const { pageNum, total, list } = products.data;\r\n                this.setState({ \r\n                    pageNum, \r\n                    total, \r\n                    productList: list, \r\n                    pageLoading: false \r\n                })\r\n            } else {\r\n                message.error('请求商品数据失败');\r\n            }\r\n        } catch(err) {\r\n            // 该catch捕获的是 this.searchRef.current.validateFields() 的错误\r\n            // req的错误在ajax的封装中已经处理过了，因此因此无需在此捕获\r\n            message.error('获取搜索表单数据失败');\r\n        }\r\n\r\n    }\r\n\r\n    // 下架按钮点击事件\r\n    withdrawProduct = async (productId, status) => {\r\n        const {pageNum} = this.state;\r\n        const response = await reqUpdateProductState(productId, (status === 1 ? 0 : 1));\r\n        if (response.status === 0) {\r\n            this.getProduct(pageNum, PAGE_SIZE);\r\n            message.success('更新商品状态成功');\r\n        } else {\r\n            message.error('更新商品状态失败');\r\n        }\r\n    }\r\n    // Table页改变回调：重新请求数据\r\n    pageChange = (pageNum, pageSize) => {\r\n        this.getProduct(pageNum, pageSize);\r\n    }\r\n\r\n    // 挂载组件前渲染表格列名\r\n    UNSAFE_componentWillMount() {\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n                key: 'desc',\r\n                width: '40%'\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price', \r\n                key: 'price'\r\n            },\r\n            {\r\n                title: '状态',\r\n                key: 'state',\r\n                width: '13%',\r\n                render: (product) => (\r\n                    <>\r\n                        <span style={{fontSize: 13, width: 50, marginBottom: '5px', display: 'inline-block'}}>{product.status ? '在售' : '已下架'}</span>\r\n                        <Button type='primary' style={{fontSize: 12, width: 50, height: 30, padding: 0}} onClick={() => {this.withdrawProduct(product._id, product.status)}}>{product.status ? '下架' : '上架'}</Button>\r\n                    </>\r\n                )\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operate',\r\n                render: (product) => (\r\n                    <>\r\n                        {/* push()方法可以接收两个参数 path 和 state */}\r\n                        {/* 通过push传入的 state，保存在path的 this.props.loaction.state中 */}\r\n                        <LinkButton onClick={() => this.props.history.push('/product/detail', product)}>详情</LinkButton>\r\n                        <LinkButton onClick={() => this.props.history.push('/product/addupdate', product)}>修改</LinkButton>\r\n                    </>\r\n                )\r\n            },\r\n        ]\r\n    }\r\n    // 挂载组件完成发送请求\r\n    componentDidMount = () => {\r\n        this.getProduct(this.state.pageNum, PAGE_SIZE);\r\n    }\r\n    render() {\r\n        // 解构state的值\r\n        const { pageLoading, total, productList } = this.state;\r\n        \r\n        const title = (\r\n            <Form ref={this.searchRef} layout=\"inline\">\r\n                <Form.Item name='searchType' initialValue=\"productName\">\r\n                    <Select style={{ width: 120 }}>\r\n                        <Option value=\"productName\">按名称搜索</Option>\r\n                        <Option value=\"productDesc\">按描述搜索</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"searchName\" style={{ width: 120 }}>\r\n                    <Search placeholder=\"关键字\" allowClear style={{ width: 150 }}  onSearch={() => {this.getProduct(1, PAGE_SIZE)}} />\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n        // card按钮\r\n        const extra = (\r\n            <Button style={{ width: 90, padding: '4px 0px' }} onClick={this.showAdd} type='primary' ghost>\r\n                <PlusOutlined />\r\n                <span onClick={() => this.props.history.push('/product/addupdate')}>添加商品</span>\r\n            </Button>\r\n        )\r\n        return (\r\n            <div>\r\n                <Card title={title} extra={extra} >\r\n                    <Table\r\n                        dataSource={productList}\r\n                        columns={this.columns}\r\n                        rowKey='_id'\r\n                        bordered\r\n                        loading={pageLoading}\r\n                        pagination={{\r\n                            total: total,\r\n                            pageSize: PAGE_SIZE,\r\n                            showQuickJumper: true,\r\n                            onChange: (pageNum) => {this.pageChange(pageNum, PAGE_SIZE)}       // 页码或PageSize改变回调\r\n                        }}\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Modal, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { BASE_IMG_PATH, UPLOAD_IMG_NAME } from '../../utils/constants';\r\nimport { reqDeleteProductImg } from '../../api'\r\n\r\nexport default class PicturesWall extends Component {\r\n  static propTypes = {\r\n    // 限定图片为一个数组元素\r\n    img: PropTypes.array\r\n  }\r\n  // 在组件初始化时，初始化fileList列表\r\n  constructor(props) {\r\n    super(props);\r\n    let fileList = [];\r\n    // 如果传入了 imgs, 生成一个对应的 fileList \r\n    const { imgs } = this.props;\r\n    // 如果imgs数组中有值，则遍历数组将值传入\r\n    if (imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: 'done', // loading: 上传中, done: 上传完成, remove: 删除 \r\n        url: BASE_IMG_PATH + img,\r\n      }))\r\n    }\r\n    this.state = {\r\n      previewVisible: false,      // 照片预览框是否可视\r\n      previewImage: '',           // 预览照片的地址\r\n      fileList\r\n    };\r\n  }\r\n\r\n  // 得到当前已上传的图片文件名数组，后将该数组传给父组件做保存显示\r\n  getImgs = () => this.state.fileList.map(file => file.name);\r\n\r\n  // 关闭预览照片\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // 预览照片按钮\r\n  handlePreview = file => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,    // thumbUrl:给未上传成功的图片一个默认显示\r\n      previewVisible: true,\r\n    });\r\n  };\r\n  // 上传照片状态被改变时：上传中，完成，失败都会调用此回调\r\n  // 该回调函数中默认接受3个参数：上传的file，当前的fileList，及服务端响应内容event\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log(file)\r\n    // 图片上传成功标识\r\n    if (file.status === 'done') {\r\n      // result为服务器返回的结果数据 \r\n      // 上传成功：{state: 0， data: {name: 服务器中图片名, url: 服务器中图片地址}}\r\n      const result = file.response;\r\n      if (result.status === 0) {\r\n        message.success('上传成功了');\r\n        // 因为此时file中返回的信息与服务器中保存图片的信息不一致，因此需要修正\r\n        const { name, url } = result.data;\r\n        file = fileList[fileList.length - 1];\r\n        file.name = name;\r\n        file.url = url;\r\n      } else {\r\n        message.error('上传失败了');\r\n      }\r\n    } else if (file.status === 'removed') {\r\n      const result = await reqDeleteProductImg(file.name);\r\n      if (result.status === 0) {\r\n        message.success('删除图片成功');\r\n      } else {\r\n        message.error('删除图片失败');\r\n      }\r\n    }\r\n    // 更新 fileList 状态 \r\n    this.setState({ fileList })\r\n  };\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    // 上传照片按钮\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Upload\r\n          action=\"/manage/img/upload\"        // 上传的地址 \r\n          accept=\"image/*\"                   // 接受上传的文件类型，表示接收一切图片类型\r\n          name={UPLOAD_IMG_NAME}             // 发送到后台的文件请求参数名————接口规定为：image\r\n          listType=\"picture-card\"            // 已上传的图片通过什么样式显示\r\n          fileList={fileList}                // 已上传的文件列表\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n          beforeUpload={this.beforeUpload}\r\n        >\r\n          {/* 设置上传照片不能大于4张 */}\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n        {/* 预览照片框 */}\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"product-img\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nexport default class RichTextEditor extends Component {\r\n    // 限定传入detail内容\r\n    static propTypes = {\r\n        detail: PropTypes.string\r\n    }\r\n    constructor (props) {\r\n        super(props);\r\n        const detail = this.props.detail;\r\n        let editorState;\r\n        // 若detail有值说明是修改商品页面，则对默认传入值做显示\r\n        if (detail) {\r\n            const blocksFromHtml = htmlToDraft(detail);\r\n            // blocksFromHtml含有以下两个属性\r\n            const {contentBlocks, entityMap} = blocksFromHtml;\r\n            const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n            editorState = EditorState.createWithContent(contentState);\r\n        } else {\r\n            // 添加商品页面，无默认值，创建空editorState\r\n            editorState = EditorState.createEmpty();\r\n        }\r\n        this.state = {\r\n            editorState\r\n        }\r\n    }\r\n    // 当输入改变时立即保存状态数据, 该方法会接收到一个参数为当前editor的值\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({editorState});\r\n    }\r\n    // 父元素调用方法获得输入框数据\r\n    getDetail = () => draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\r\n\r\n    render() {\r\n        return (\r\n            <Editor\r\n                editorState={this.state.editorState}            // 输入框显示内容\r\n                editorStyle={{height: 250, border: '1px solid #f1f1f1', padding: '0 30px'}}     // 输入框样式\r\n                onEditorStateChange={this.onEditorStateChange}  // 输入框内容改变触发的回调函数\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    Cascader,\r\n    Form,\r\n    Input,\r\n    Button,\r\n    message,\r\n} from 'antd';\r\nimport {\r\n    ArrowLeftOutlined\r\n} from '@ant-design/icons'\r\n// 引入请求方式\r\nimport {\r\n    reqCategory,\r\n    reqAddOrUpdateProduct\r\n} from '../../api/index'\r\nimport PicturesWall from './PictrueWall.jsx';\r\nimport RichTextEditor from './RichTextEditor';\r\n\r\nexport default class ProductAddUpdate extends Component {\r\n    state = {\r\n        options: []        // 级联下拉框的一级下拉列表\r\n    }\r\n    formRef = React.createRef();\r\n    picRef = React.createRef();\r\n    detailRef = React.createRef();\r\n\r\n    // 从详情页回退到home\r\n    handleBack = () => {\r\n        console.log(this.props)\r\n        this.props.history.goBack();\r\n    }\r\n    // 对价格表单进行自定义验证\r\n    validatePrice = (rule, value, callback) => { \r\n        value = value * 1;\r\n        if (value > 0) { \r\n            callback() \r\n        } else { \r\n            callback('价格必须是大于 0 的数值') \r\n        } \r\n    };\r\n\r\n    // 初始化级联列表\r\n    initOptions = async (data) => {\r\n        // 初始化一级级联\r\n        const options = data.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: false       // 是否是叶子节点，无法判断其是否有子类，因此统一设置为有\r\n        }))\r\n        // 解决修改商品时二级级联列表不默认显示的问题\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId, categoryId } = product;\r\n        if (isUpdate && pCategoryId !== '0') {\r\n            // 修改商品界面，获取其二级级联，显示默认值\r\n            this.setState({ options }, async () => {\r\n                const targetOption = options.find(category => category.value === pCategoryId);\r\n                await this.loadData([targetOption]);\r\n                this.formRef.current.setFieldsValue({\r\n                    categoryIds: [pCategoryId, categoryId]\r\n                })\r\n            })\r\n        } else {\r\n            // 添加商品页面直接渲染其一级级联\r\n            this.setState({ options }, () => {\r\n                this.formRef.current.setFieldsValue({\r\n                    categoryIds: [categoryId]\r\n                })\r\n            });\r\n        }\r\n    }\r\n    // 获取所有一级或二级分类\r\n    getCategory = async (parentId) => {\r\n        const { data } = await reqCategory(parentId);\r\n        // 说明该分类为一级分类\r\n        if (parentId === '0') {\r\n            this.initOptions(data);\r\n        } else {\r\n            // 返回二级分类列表(作为async函数的Promise对象成功的返回值)\r\n            return data;\r\n        }\r\n    }\r\n    // 级联输入框: 选择某个分类时的回调  \r\n    loadData = async selectedOptions => {\r\n        // 为确定点击的目标option，其值为存储在渲染数组中的值\r\n        // 则可知value为category的Id值\r\n        const targetOption = selectedOptions[0];\r\n        // 点击后的加载效果\r\n        targetOption.loading = true;\r\n\r\n        // 异步发送请求 获取二级列表\r\n        // 此时getCategory为一个async函数，返回值为 一个Promise，因此使用await接收\r\n        const subData = await this.getCategory(targetOption.value);\r\n        targetOption.loading = false    // 隐藏 loading\r\n        // 若有子分类\r\n        if (subData && subData.length > 0) {\r\n            // 生成一个二级option\r\n            const subCategory = subData.map(c => ({\r\n                value: c._id,\r\n                label: c.name,\r\n                isLeaf: true,\r\n            }))\r\n            // 将二级option与当前点击一级option绑定\r\n            targetOption.children = subCategory;\r\n        } else {\r\n            // 无子分类：改变其isLeaf属性\r\n            targetOption.isLeaf = true;\r\n        }\r\n        // 更新option状态\r\n        this.setState({ options: [...this.state.options] })\r\n    };\r\n\r\n    // 提交表单回调事件\r\n    handleSubmit = async () => {\r\n        const { formRef, picRef, detailRef, product, isUpdate } = this;\r\n        try {\r\n            const { name, desc, price, categoryIds } = await formRef.current.validateFields();\r\n\r\n            // 错误写法：\r\n            // const pCategoryId = categoryIds[0];\r\n            // const CategoryId = categoryIds[1];\r\n\r\n            // 若商品为一级分类\r\n            let pCategoryId, categoryId;\r\n            if (categoryIds.length === 1) {\r\n                pCategoryId = '0';\r\n                categoryId = categoryIds[0]\r\n            } else {\r\n                pCategoryId = categoryIds[0];\r\n                categoryId = categoryIds[1];\r\n            }\r\n            const imgs = picRef.current.getImgs()\r\n            const detail = detailRef.current.getDetail()\r\n            // 创建提交的产品对象\r\n            const productObj = { pCategoryId, categoryId, name, desc, price, imgs, detail };\r\n            // 若此时为修改商品界面，则传入id值\r\n            if (isUpdate && product._id) {\r\n                const { _id } = product;\r\n                // 注意：这里使用方括号来读取变量名时，必须为变量名打冒号，否则方括号中的值会被识别为一个变量\r\n                productObj['_id'] = _id\r\n\r\n            }\r\n            const result = await reqAddOrUpdateProduct(productObj);\r\n            if (result.status === 0) {\r\n                message.success('保存商品成功');\r\n                this.props.history.goBack();\r\n            } else {\r\n                message.success('表单提交出现异常，请稍后重试');\r\n            }\r\n        } catch (err) {\r\n            message.error('表单验证失败');\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const product = this.props.location.state;\r\n        this.product = product || {};\r\n        this.isUpdate = !!product;  // !!xxx 将一个数据强制转化成布尔类型值\r\n    }\r\n    componentDidMount() {\r\n        this.getCategory('0')\r\n    }\r\n    render() {\r\n        const { product, isUpdate, formRef, picRef, detailRef } = this;\r\n        const { name, desc, price, imgs, detail } = product;\r\n        const { options } = this.state;\r\n        const title = (\r\n            <>\r\n                <ArrowLeftOutlined className='backArrow' onClick={this.handleBack} />\r\n                <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n            </>\r\n        )\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Form\r\n                    labelCol={{\r\n                        span: 2,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 10,\r\n                    }}\r\n                    labelAlign='left'\r\n                    ref={formRef}\r\n                >\r\n                    <Form.Item\r\n                        label=\"商品名称\"\r\n                        name='name'\r\n                        initialValue={name}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入商品名称！',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品描述\"\r\n                        name='desc'\r\n                        initialValue={desc}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入商品描述！',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input.TextArea />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品价格\"\r\n                        name='price'\r\n                        initialValue={price}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入商品价格！',\r\n                            },\r\n                            { validator: this.validatePrice }\r\n                        ]}\r\n                    >\r\n                        <Input type='number' prefix=\"￥\" suffix=\"RMB\" style={{ width: '100%' }} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品分类\"\r\n                        name='categoryIds'\r\n                        // initialValue={categoryIds}       // 使用setFieldValue后就无需使用initialValue再设置初始值\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入商品分类！',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Cascader\r\n                            options={options}\r\n                            loadData={this.loadData}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品图片\"\r\n                        name='imgs'\r\n                    >\r\n                        <PicturesWall ref={picRef} imgs={imgs} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品详情\"\r\n                        name='detail'\r\n                    >\r\n                        <RichTextEditor ref={detailRef} detail={detail} />\r\n                    </Form.Item>\r\n                    <Form.Item style={{ marginTop: 100 }} wrapperCol={{ offset: 3, span: 8 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit} block>\r\n                            提&nbsp;&nbsp;&nbsp;&nbsp;交\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    List,\r\n} from 'antd'\r\nimport {\r\n    ArrowLeftOutlined\r\n} from '@ant-design/icons'\r\n// 引入请求方法\r\nimport { reqCategoryFromId } from '../../api'\r\n// 引入图片基本路径常量\r\nimport { BASE_IMG_PATH } from '../../utils/constants'\r\n\r\nexport default class ProductDetail extends Component {\r\n    state = {\r\n        cName: '',      // 一级分类名称\r\n        cSonName: ''    // 二级分类名称\r\n    }\r\n    // 异步获取当前产品对应的分类名称\r\n    getCategoryName = async () => {\r\n        const { categoryId, pCategoryId } = this.props.location.state || {};\r\n        // 如果处在一级分类下\r\n        if (pCategoryId === '0') {\r\n            const result = await reqCategoryFromId(categoryId);\r\n            const cName = result.data.name;\r\n            this.setState({ cName });\r\n        } else {\r\n            // 若处在二级分类下\r\n            const results = await Promise.all([reqCategoryFromId(pCategoryId), reqCategoryFromId(categoryId)]);\r\n            const result1 = results[0];\r\n            const result2 = results[1];\r\n            const cName = result1.data.name;\r\n            const cSonName = result2.data.name;\r\n            this.setState({ cName, cSonName });\r\n        }\r\n    }\r\n    // 从详情页回退到home\r\n    handleBack = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    componentDidMount() {\r\n        this.getCategoryName()\r\n    }\r\n    render() {\r\n        const title = (\r\n            <>\r\n                <ArrowLeftOutlined className='backArrow' onClick={this.handleBack} />\r\n                <span>商品详情</span>\r\n            </>\r\n        )\r\n        const { name, desc, price, imgs, detail } = this.props.location.state || {};\r\n        const { cName, cSonName } = this.state; \r\n        return (\r\n            <Card title={title} className='product-detail'>\r\n                <List>\r\n                    <List.Item>\r\n                        <span className='left'>商品名称:</span>\r\n                        <span>{name}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className='left'>商品描述:</span>\r\n                        <span>{desc}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className='left'>商品价格:</span>\r\n                        <span>{price + '元'}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className='left'>所属分类:</span>\r\n                        <span>{cName + (cSonName ? ' --> ' + cSonName : '')}</span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className='left'>商品图片:</span>\r\n                        {imgs === undefined ? null : <span> {imgs.map(img => (<img src={BASE_IMG_PATH + img} alt=\"img\" key={img} style={{ width: 150, height: 150, marginRight: 10, border: '1px solid black' }} />))} </span>} \r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className='left'>商品详情:</span>\r\n                        <div dangerouslySetInnerHTML={{ __html: detail }}></div>\r\n                    </List.Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\n// 引入路由组件\r\nimport ProductHome from './Home.jsx'\r\nimport ProductAddUpdate from './AddUpdate.jsx'\r\nimport ProductDetail from './Detail.jsx'\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path='/product' exact component={ProductHome}/>\r\n                <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n                <Route path='/product/detail' component={ProductDetail}/>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    Card,\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    Tree,\r\n    message\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { PAGE_SIZE } from '../../utils/constants';\r\nimport { reqAddRole, reqRole, reqUpdateRole } from '../../api';\r\nimport { formateDate } from '../../utils/dateUtils';\r\nimport { logout } from '../../redux/action';\r\nimport menuList from '../../config/menuConfig.jsx';\r\n// 本来要从其中读取auth_name，现在可以直接从redux中读取\r\n// import memoryUtils from '../../utils/memoryUtils';\r\n\r\nclass Role extends Component {\r\n    state = {\r\n        roles: [],           // 所有角色的列表\r\n        currentRole: {},     // 当前单选框选中的节点\r\n        menuList: [{\r\n            title: '平台权限',\r\n            key: '/',\r\n            children: menuList\r\n        }],\r\n        disabled: true,      // 设置权限按钮是否可用\r\n        confirmLoading: false,  // 添加角色loading\r\n        loading: true,\r\n        visible: false,             // 0:都不显示，1:显示添加，2:显示增加\r\n        expandedKeys: []            // Tree结构中的指定展开节点\r\n    }\r\n\r\n    // role = {};\r\n\r\n    formRef = React.createRef();\r\n\r\n    getRoles = async () => {\r\n        const { status, data } = await reqRole();\r\n        if (status === 0 && data.length >= 0) {\r\n            const roles = data.map(role => {\r\n                role.create_time = formateDate(role.create_time);\r\n                role.auth_time = formateDate(role.auth_time);\r\n                return role;\r\n            })\r\n            this.setState({ roles, loading: false })\r\n        }\r\n    }\r\n    showAdd = () => {\r\n        this.setState({ visible: 1 });\r\n    }\r\n    showSetAthu = () => {\r\n        this.setState({ visible: 2 });\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({ visible: false })\r\n    }\r\n    // 添加回调函数\r\n    handleAdd = async () => {\r\n        try {\r\n            const { roleName } = await this.formRef.current.validateFields();\r\n            this.setState({ confirmLoading: true })\r\n            const { status } = await reqAddRole(roleName);\r\n            if (status === 0) {\r\n                // 更新页面\r\n                this.getRoles();\r\n                // 取消弹窗显示\r\n                this.setState({ confirmLoading: false, visible: false });\r\n                message.success('添加对象成功');\r\n            } else {\r\n                message.error('添加对象失败');\r\n            }\r\n        } catch {\r\n            message.error('表单验证失败');\r\n        }\r\n    }\r\n    // 更新回调函数\r\n    handleUpdate = async () => {\r\n        this.setState({ confirmLoading: true })\r\n\r\n        const auth_name = this.props.user.username;\r\n        const auth_time = new Date().getTime();\r\n        let {currentRole: {_id, menus}} = this.state;\r\n        const role = {_id, menus, auth_name, auth_time};\r\n\r\n        const {status} = await reqUpdateRole(role);\r\n        if (status === 0) {\r\n            // 若当前更新的是自己的角色权限，则强制退出\r\n            if (role._id === this.props.user.role_id) {\r\n                this.props.logout();\r\n                message.success('修改当前用户角色权限成功, 请重新登录以更新');\r\n            } else {\r\n                this.getRoles();\r\n                this.setState({ confirmLoading: false, visible: false });\r\n                message.success('修改角色权限成功');\r\n            }\r\n        } else {\r\n            message.error('修改角色权限失败');\r\n        }\r\n    }\r\n    // 选中Tree中复选框的默认事件\r\n    handleCheck = (menus) => {\r\n        const {currentRole} = this.state;\r\n        this.setState({currentRole:{...currentRole, menus}})\r\n    }\r\n    // 设置展开的节点\r\n    setExpandedKeys = () => {\r\n        const {currentRole: {menus}} = this.state;\r\n        const expandedKeys = [];\r\n        if (menus.length > 0) {\r\n            expandedKeys.push('/');\r\n            menus.map(menu => {\r\n                if (menu.indexOf('/charts') === 0) {\r\n                    expandedKeys.push('/charts');\r\n                } else if (menu === '/product' || menu === '/category') {\r\n                    expandedKeys.push('/products');\r\n                }\r\n                return expandedKeys;\r\n            });\r\n        }\r\n        this.setState({expandedKeys});\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time'\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                key: 'auth_time'\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n                key: 'auth_name'\r\n            },\r\n        ];\r\n    }\r\n    componentDidMount() {\r\n        this.getRoles();\r\n    }\r\n    render() {\r\n        const { roles, loading, disabled, visible, confirmLoading, currentRole, menuList, expandedKeys } = this.state\r\n        const { columns, formRef } = this;\r\n        const title = (\r\n            <div>\r\n                <Button type='primary' ghost onClick={this.showAdd}>\r\n                    <PlusOutlined />\r\n                    创建用户\r\n                </Button>\r\n                &nbsp; &nbsp;\r\n                <Button disabled={disabled} type='primary' ghost onClick={this.showSetAthu}>\r\n                    设置角色权限\r\n                </Button>\r\n            </div>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    dataSource={roles}\r\n                    columns={columns}\r\n                    rowKey='_id'\r\n                    loading={loading}\r\n                    pagination={{\r\n                        pageSize: PAGE_SIZE,\r\n                        showQuickJumper: true,\r\n                    }}\r\n                    rowSelection={{\r\n                        type: 'radio',\r\n                        onChange: (selected, selectedRows) => {\r\n                            // selectedRowKeys: 当前被选中行的key值, selectedRows：当前被选中行，为一个数组\r\n                            // 将设置权限按钮解封，并将当前选中行存入状态中\r\n                            this.setState({ disabled: false, currentRole: selectedRows[0] }, () => {\r\n                                // 在当前节点存入状态完毕后，将其所需要展开的树结构父节点也存入状态\r\n                                this.setExpandedKeys()\r\n                            });\r\n                        }\r\n                    }}\r\n\r\n                >\r\n\r\n                </Table>\r\n                {/* 添加角色弹窗 */}\r\n                <Modal\r\n                    title={'添加角色'}\r\n                    visible={visible === 1}\r\n                    onOk={this.handleAdd}\r\n                    confirmLoading={confirmLoading}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <Form\r\n                        ref={formRef}\r\n                        wrapperCol={{\r\n                            span: 12,\r\n                        }}\r\n\r\n                    >\r\n                        <Form.Item\r\n                            label='角色名称'\r\n                            name='roleName'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '必须输入角色名称！'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input placeholder='请输入角色名称'></Input>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                {/* 修改权限弹窗 */}\r\n                {\r\n                    visible &&\r\n                    <Modal\r\n                        title={'修改角色权限'}\r\n                        visible={visible === 2}\r\n                        onOk={this.handleUpdate}\r\n                        confirmLoading={confirmLoading}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <Form\r\n                            wrapperCol={{\r\n                                span: 12,\r\n                            }}\r\n                        >\r\n                            <Form.Item\r\n                                label='角色名称'\r\n                                name='roleName'\r\n                                initialValue={currentRole.name}\r\n                            >\r\n                                <Input disabled></Input>\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Tree\r\n                            checkable\r\n                            expandedKeys={expandedKeys} // 是否自动展开父节点\r\n                            onCheck={this.handleCheck}\r\n                            defaultCheckedKeys={currentRole.menus} // 默认选中的树节点复选框\r\n                            treeData={menuList}             // 树的相关数据\r\n                        />\r\n                    </Modal>\r\n                }\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {\r\n        logout\r\n    }\r\n)(Role);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n} from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class UserForm extends Component {\r\n    static propTypes = {\r\n        roleList: PropTypes.array,\r\n        user: PropTypes.object,\r\n        visible: PropTypes.bool\r\n    }\r\n    formRef = React.createRef();\r\n    getInitForm = () => {\r\n        const { username, phone, email, role_id } = this.props.user;\r\n        this.formRef.current.setFieldsValue({\r\n            username, phone, email, role_id\r\n        })\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getInitForm();\r\n    }\r\n    render() {\r\n        const { user, roleList } = this.props;\r\n        return (\r\n            <Form\r\n                labelCol={{\r\n                    span: 4,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 10,\r\n                }}\r\n                ref={this.formRef}>\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        { required: true, message: '必须输入密码' },\r\n                        { min: 4, message: '用户名至少4位' },\r\n                        { max: 12, message: '用户名最多12位' },\r\n                        { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                {\r\n                    !user._id ? (\r\n                        <Form.Item\r\n                            label=\"密码\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: '必须输入密码' },\r\n                                { min: 4, message: '密码至少4位' },\r\n                                { max: 12, message: '密码最多12位' },\r\n                                { pattern: /^[a-zA-Z0-9_]+$/, message: '密码必须是英文、数字或下划线组成' }\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n                    ) : null\r\n                }\r\n                <Form.Item\r\n                    label=\"手机号\"\r\n                    name=\"phone\"\r\n                    rules={[\r\n                        { required: true, message: '必须输入手机号' },\r\n                        { min: 11, message: '手机号必须为11位' },\r\n                        { max: 11, message: '手机号必须为1位' },\r\n                        { pattern: /^[0-9_]+$/, message: '手机号必须为纯数字组成' }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"邮箱\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        { required: true, message: '必须输入邮箱' },\r\n                        { \r\n                            pattern: /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/,\r\n                            message: '请输入正确的邮箱格式' \r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"角色\"\r\n                    name=\"role_id\"\r\n                >\r\n                    <Select style={{ width: 120 }} allowClear>\r\n                        {\r\n                            roleList.map(role => (\r\n                                <Option value={role._id} key={role._id}>{role.name}</Option>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Table,\r\n    Modal,\r\n    message,\r\n    Button,\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons'\r\nimport UserForm from './UserForm'\r\nimport LinkButton from '../../components/LinkButton'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n// 引入将时间戳转化为时间的现实方法\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport {\r\n    reqRole,\r\n    reqUser,\r\n    reqAddUpdateUser,\r\n    reqDelectUser\r\n} from '../../api'\r\n\r\nconst { confirm } = Modal;\r\nexport default class User extends Component {\r\n    state = {\r\n        users: [],\r\n        loading: true,\r\n        confirmLoading: false,       // 表单提交loading\r\n        visible: false,         // 显示添加弹窗\r\n        roleList: []\r\n    }\r\n    formRef = React.createRef();\r\n    // 获取用户数据\r\n    getUser = async () => {\r\n        try {\r\n            const response = await Promise.all([reqUser(), reqRole()]);\r\n            let { status, data: { users } } = response[0];\r\n            let { data } = response[1];\r\n            const roleList = data.map(role => {\r\n                const { _id, name } = role;\r\n                return { _id, name }\r\n            });\r\n            // 确保在roleList存入state后find(role_name)\r\n            this.setState({ roleList }, () => {\r\n                if (status === 0 && users.length > 0) {\r\n                    // 更新请求到的user的创建时间和所属角色\r\n                    users = users.map(user => {\r\n                        user.create_time = formateDate(user.create_time);\r\n                        const role = this.state.roleList.find(role => role._id === user.role_id);\r\n                        // 以免返回undefined报错\r\n                        user.role_name = role === undefined ? null : role.name;\r\n                        return user\r\n                    })\r\n                    this.setState({ users, loading: false });\r\n                } else {\r\n                    message.error('请求用户数据失败');\r\n                }\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    // 显示增加用户弹窗\r\n    showAdd = () => {\r\n        this.user = null\r\n        this.setState({ visible: true });\r\n    }\r\n    // 显示修改用户弹窗\r\n    showUpdate = (user) => {\r\n        this.user = user;\r\n        this.setState({ visible: true });\r\n    }\r\n\r\n    // 显示删除用户确认框\r\n    showDelete = (user) => {\r\n        // 必须从this中解构，否则在onOk()中无法读取\r\n        const { handleDelete } = this;\r\n        confirm({\r\n            title: `确定删除${user.username}吗？`,\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '一旦删除不可撤销喔!',\r\n            maskClosable: true,\r\n            onOk() {\r\n                handleDelete(user);\r\n            },\r\n        });\r\n    }\r\n\r\n    // 创建/修改用户回调事件\r\n    handleAddUpdate = async () => {\r\n        try {\r\n            // 这里不能再从this.formRef.current中读取验证数据的方法\r\n            // 因此先从this.formRef.current读取了UserForm组件的实例，后从实例上的formRef读取了表单实例，最后读取表单实例的方法\r\n            const user = await this.formRef.current.formRef.current.validateFields();\r\n            let msg = '添加'\r\n            // 若为修改\r\n            if (this.user) {\r\n                user._id = this.user._id;\r\n                msg = '修改'\r\n            }\r\n            const { status } = await reqAddUpdateUser(user);\r\n\r\n            if (status === 0) {\r\n                this.getUser();\r\n                message.success(msg + '用户成功');\r\n            } else {\r\n                message.error(msg + '用户失败');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            message.error('获取添加用户表单数据失败');\r\n        }\r\n        this.setState({ visible: false })\r\n    }\r\n    // 删除用户回调事件\r\n    handleDelete = async (user) => {\r\n        const { status } = await reqDelectUser(user._id);\r\n        if (status === 0) {\r\n            this.getUser();\r\n            message.success('删除用户成功！');\r\n        } else {\r\n            message.error('删除用户失败！')\r\n        }\r\n    }\r\n\r\n    // 弹窗取消\r\n    handleCancel = () => {\r\n        this.setState({ visible: false })\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.columns = [\r\n            {\r\n                title: '用户',\r\n                dataIndex: 'username',\r\n                key: 'username'\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email'\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n                key: 'phone'\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time'\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_name',\r\n                key: 'role_name'\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (user) => (\r\n                    <>\r\n                        <LinkButton onClick={() => { this.showUpdate(user) }}>修改</LinkButton>\r\n                        <LinkButton onClick={() => { this.showDelete(user) }}>删除</LinkButton>\r\n                    </>\r\n                )\r\n\r\n            },\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        this.getUser();\r\n    }\r\n    render() {\r\n        const { users, confirmLoading, visible, roleList, loading } = this.state;\r\n        let { columns } = this\r\n        const user = this.user || {}\r\n        const title = (\r\n            <Button type='primary' ghost onClick={this.showAdd}>\r\n                <PlusOutlined />\r\n                创建用户\r\n            </Button>\r\n        )\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    dataSource={users}\r\n                    columns={columns}\r\n                    rowKey='_id'\r\n                    loading={loading}\r\n                    pagination={{\r\n                        pageSize: PAGE_SIZE,\r\n                        showQuickJumper: true,\r\n                    }}\r\n                >\r\n\r\n                </Table>\r\n                {\r\n                    this.state.visible &&\r\n                    <Modal\r\n                        title={user ? '修改用户' : '添加用户'}\r\n                        visible={visible}\r\n                        onOk={this.handleAddUpdate}\r\n                        confirmLoading={confirmLoading}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <UserForm user={user} ref={this.formRef} roleList={roleList} />\r\n                    </Modal>\r\n                }\r\n\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store - 1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'bar',\r\n          data: sales,\r\n          barWidth: 29\r\n        }, {\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: stores,\r\n          barWidth: 29\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sales, stores } = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: '当前商品库存量'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '60%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 280, name: '邮件营销' },\r\n            { value: 204, name: '联盟广告' },\r\n            { value: 135, name: '视频广告' },\r\n            { value: 408, name: '搜索引擎' }\r\n          ],\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      legend: {\r\n        top: 'bottom',\r\n        lineStyle: {\r\n          width: '20'\r\n        }\r\n      },\r\n      toolbox: {\r\n        show: true,\r\n        feature: {\r\n          mark: { show: true },\r\n          dataView: { show: true, readOnly: false },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '面积模式',\r\n          type: 'pie',\r\n          radius: [20, 100],\r\n          center: ['50%', '50%'],\r\n          roseType: 'area',\r\n          itemStyle: {\r\n            borderRadius: 3\r\n          },\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 280, name: '邮件营销' },\r\n            { value: 204, name: '联盟广告' },\r\n            { value: 135, name: '视频广告' },\r\n            { value: 408, name: '搜索引擎' }\r\n          ],\r\n          labelLine: {\r\n            length: 5\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{ height: 350 }} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './index.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Layout } from 'antd';\r\n// import memoryUtils from '../../utils/memoryUtils';\r\n// 引入异步加载组件的方法\r\n// import asyncComponent from '../../utils/asyncComponent';\r\n// 引入自定义组件\r\nimport Header from '../../components/Header';\r\nimport LeftNav from '../../components/LeftNav';\r\nimport Home from '../Home';\r\nimport Category from '../Category';\r\nimport Product from '../Product';\r\nimport Role from '../Role';\r\nimport User from '../User';\r\nimport Bar from '../Charts/bar';\r\nimport Line from '../Charts/line';\r\nimport Pie from '../Charts/pie';\r\nimport NotFound from '../Not-found';\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport './index.less'\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\n// 定义异步加载组件\r\n// const AsyncHome = asyncComponent(() => import('../Home'));\r\n// const AsyncCategory = asyncComponent(() => import('../Category'));\r\n// const AsyncProduct = asyncComponent(() => import('../Product'));\r\n// const AsyncRole = asyncComponent(() => import('../Role'));\r\n// const AsyncUser = asyncComponent(() => import('../User'));\r\n// const AsyncBar = asyncComponent(() => import('../Charts/bar'));\r\n// const AsyncLine = asyncComponent(() => import('../Charts/line'));\r\n// const AsyncPie = asyncComponent(() => import('../Charts/pie'));\r\n// const AsyncNotFound = asyncComponent(() => import('../Not-found'));\r\n\r\nclass Admin extends Component {\r\n\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    };\r\n    render() {\r\n        const { collapsed } = this.state;\r\n        // 若内存中没有登陆状态，则回到login界面\r\n        const user = this.props.user;\r\n        if (!user._id) {\r\n            return <Redirect to='/login' />\r\n        }\r\n\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                    <div style={{ margin: '15px' }} className=\"logo\">\r\n                        <img className='logo-img' src={logo} alt=\"logo\" style={{ width: '35px', marginLeft: `${collapsed ? '8px' : '0'}` }} />\r\n                        <span className='logo-word' style={{ opacity: `${collapsed ? '0' : '1'}` }}>嘻嘻的后台</span>\r\n                    </div>\r\n                    <LeftNav />\r\n                </Sider>\r\n                <Layout>\r\n                    <Header className=\"site-layout-background\">Header</Header>\r\n                    <Content style={{ margin: '0 16px' }}>\r\n                        <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n                            <Switch>\r\n                                {/* 在为输入路由且精确匹配时，显示home路由组件 */}\r\n                                {/* <Redirect from='/' to='/home' exact/>\r\n                                <Route path='/home' component={AsyncHome} />\r\n                                <Route path='/category' component={AsyncCategory} />\r\n                                <Route path='/product' component={AsyncProduct} />\r\n                                <Route path='/role' component={AsyncRole} />\r\n                                <Route path='/user' component={AsyncUser} />\r\n                                <Route path='/charts/bar' component={AsyncBar} />\r\n                                <Route path='/charts/line' component={AsyncLine} />\r\n                                <Route path='/charts/pie' component={AsyncPie} /> */}\r\n                                <Redirect from='/' to='/home' exact/>\r\n                                <Route path='/home' component={Home} />\r\n                                <Route path='/category' component={Category} />\r\n                                <Route path='/product' component={Product} />\r\n                                <Route path='/role' component={Role} />\r\n                                <Route path='/user' component={User} />\r\n                                <Route path='/charts/bar' component={Bar} />\r\n                                <Route path='/charts/line' component={Line} />\r\n                                <Route path='/charts/pie' component={Pie} />\r\n                                {/* 当以上所有路径都不匹配，则显示NotFound404路由 */}\r\n                                {/* <Route component={AsyncNotFound} /> */}\r\n                                <Route component={NotFound} />\r\n                            </Switch>\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>推荐使用谷歌浏览器，以获得更佳页面操作体验</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({ user: state.user })\r\n)(Admin);","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Login from './pages/Login'\nimport Admin from './pages/Admin'\n\nexport default class App extends Component {\n \n  render() {\n    return (\n      <Switch>\n        <Route path='/login' component={Login}></Route>\n        <Route path='/' component={Admin}></Route>\n      </Switch>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store.js';\nimport App from './App.jsx';\n\nimport {BrowserRouter} from 'react-router-dom'\nimport storageUtils from './utils/storageUtils'\nimport memoryUtils from './utils/memoryUtils'\n\nconst user = storageUtils.getUser();\nif (user && user._id) {\n    memoryUtils.user = user;\n}\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, \ndocument.getElementById('root'));"],"sourceRoot":""}